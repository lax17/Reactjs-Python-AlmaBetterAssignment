[{"D:\\assignment\\src\\App.js":"1","D:\\assignment\\src\\index.js":"2","D:\\assignment\\src\\components\\home.js":"3","D:\\assignment\\src\\components\\leaderboard.js":"4","D:\\assignment\\src\\reportWebVitals.js":"5"},{"size":255,"mtime":1610121226009,"results":"6","hashOfConfig":"7"},{"size":547,"mtime":1610109290516,"results":"8","hashOfConfig":"7"},{"size":6990,"mtime":1610127944728,"results":"9","hashOfConfig":"7"},{"size":878,"mtime":1610123796220,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1610107821578,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"illbdt",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\assignment\\src\\App.js",[],"D:\\assignment\\src\\index.js",[],"D:\\assignment\\src\\components\\home.js",["23","24","25","26","27","28","29","30","31","32"],"import React,{useState} from \"react\"\r\nimport {Modal,Button,Navbar,Nav,Form,FormControl,Col} from 'react-bootstrap'\r\n\r\n\r\nconst EnterMarks = props => {\r\n\r\nconst [errors, setErrors] = useState([])\r\nconst [field1, setfield1] = useState('')\r\nconst [field2, setfield2] = useState('')\r\nconst [field3, setfield3] = useState('')\r\nconst [field4, setfield4] = useState('')\r\nconst [field5, setfield5] = useState('')\r\n\r\nconst postData = () => {\r\n\r\n  let total_marks,percentage\r\n  let databody = {\r\n    rollno: parseInt(field1),\r\n    name: field2,\r\n    marks_maths: parseInt(field3),\r\n    marks_physics: parseInt(field4),\r\n    marks_chemistry: parseInt(field5),\r\n    total_marks: parseInt(field3) + parseInt(field4) +  parseInt(field5),\r\n    percentage : (parseInt(field3)+ parseInt(field4) +  parseInt(field5)) / 300 * 100\r\n  }\r\n\r\n  fetch(`http://127.0.0.1:5000/student/marks/`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(databody),\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n      alert(response.message)\r\n      console.log(response.message)\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nconst handleInputChange = event => {\r\n  var key = event.target.name\r\n  var value = event.target.value\r\n  eval('set' + key + '(value);')\r\n}\r\n\r\nconst hasError = key => {\r\n  return errors.indexOf(key) !== -1\r\n}\r\n\r\nconst handleSubmit = event => {\r\n  event.preventDefault()\r\n\r\n  let error = []\r\n\r\n  if (field1 === '') error.push('field1')\r\n  if (field2 === '') error.push('field2')\r\n  if (field3 === '') error.push('field3')\r\n  if (field4 === '') error.push('field4')\r\n  if (field5 === '') error.push('field5')\r\n \r\n\r\n\r\n  setErrors(error)\r\n\r\n  if (error.length > 0) return false\r\n  else {\r\n    postData()\r\n  }\r\n}\r\n\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Entering Marks ...\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Form>\r\n  <Form.Row>\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>RollNo</Form.Label>\r\n      <Form.Control type='name'\r\n                  className={\r\n                    hasError('field1')\r\n                      ? 'form-control is-invalid'\r\n                      : 'form-control'\r\n                  }\r\n                  name='field1'\r\n                  value={field1}\r\n                  onChange={handleInputChange} />\r\n                  <div\r\n                  className={hasError('field1') ? 'inline-errormsg' : 'hidden'}\r\n                >\r\n                  Please enter a value\r\n                </div>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>Name</Form.Label>\r\n      <Form.Control\r\n                  type='text'\r\n                  className={\r\n                    hasError('field2')\r\n                      ? 'form-control is-invalid'\r\n                      : 'form-control'\r\n                  }\r\n                  name='field2'\r\n                  value={field2}\r\n                  onChange={handleInputChange}\r\n                />\r\n                 <div\r\n                  className={hasError('field2') ? 'inline-errormsg' : 'hidden'}\r\n                >\r\n                  Please enter a value\r\n                </div>\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>Marks:Maths</Form.Label>\r\n      <Form.Control\r\n                  type='text'\r\n                  className={\r\n                    hasError('field3')\r\n                      ? 'form-control is-invalid'\r\n                      : 'form-control'\r\n                  }\r\n                  name='field3'\r\n                  value={field3}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div\r\n                  className={hasError('field3') ? 'inline-errormsg' : 'hidden'}\r\n                >\r\n                  Please enter a value\r\n                </div>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>Marks:Physics</Form.Label>\r\n      <Form.Control\r\n                  type='text'\r\n                  className={\r\n                    hasError('field4')\r\n                      ? 'form-control is-invalid'\r\n                      : 'form-control'\r\n                  }\r\n                  name='field4'\r\n                  value={field4}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div\r\n                  className={hasError('field4') ? 'inline-errormsg' : 'hidden'}\r\n                >\r\n                  Please enter a value\r\n                </div>\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>Marks:Chemistry</Form.Label>\r\n      <Form.Control\r\n                  type='text'\r\n                  className={\r\n                    hasError('field5')\r\n                      ? 'form-control is-invalid'\r\n                      : 'form-control'\r\n                  }\r\n                  name='field5'\r\n                  value={field5}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div\r\n                  className={hasError('field5') ? 'inline-errormsg' : 'hidden'}\r\n                >\r\n                  Please enter a value\r\n                </div>\r\n    </Form.Group>\r\n  </Form.Row>\r\n  <Form.Row>\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>Total</Form.Label>\r\n      <Form.Control  placeholder= {parseInt(field3)+ parseInt(field4) +  parseInt(field5)} />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='formBasicClassName'>\r\n      <Form.Label>Percentage</Form.Label>\r\n      <Form.Control  placeholder= {(parseInt(field3)+ parseInt(field4) +  parseInt(field5)) / 300 * 100 } />\r\n    </Form.Group>\r\n  </Form.Row>\r\n  </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n      <Button variant='success' type='submit' onClick={handleSubmit}>\r\n               Submit\r\n            </Button>\r\n        <Button onClick={props.onHide}>Close</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction DisplayHomeChoice(){\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return(\r\n\r\n  <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand href=\"#home\">StudentMang</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n       <Button variant=\"outline-info\" onClick={() => setModalShow(true)}>\r\n            Enter Marks\r\n       </Button>\r\n  \r\n      <EnterMarks\r\n       show={modalShow}\r\n       onHide={() => setModalShow(false)}\r\n        />\r\n      <Nav.Link href=\"#home\">LeaderBoard</Nav.Link>\r\n    </Nav>\r\n    <Form inline>\r\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n      <Button variant=\"outline-info\">Search</Button>\r\n    </Form>\r\n  </Navbar>)\r\n}\r\n  \r\nexport default DisplayHomeChoice","D:\\assignment\\src\\components\\leaderboard.js",["33"],"D:\\assignment\\src\\reportWebVitals.js",[],{"ruleId":"34","severity":1,"message":"35","line":2,"column":50,"nodeType":"36","messageId":"37","endLine":2,"endColumn":53},{"ruleId":"34","severity":1,"message":"38","line":8,"column":16,"nodeType":"36","messageId":"37","endLine":8,"endColumn":25},{"ruleId":"34","severity":1,"message":"39","line":9,"column":16,"nodeType":"36","messageId":"37","endLine":9,"endColumn":25},{"ruleId":"34","severity":1,"message":"40","line":10,"column":16,"nodeType":"36","messageId":"37","endLine":10,"endColumn":25},{"ruleId":"34","severity":1,"message":"41","line":11,"column":16,"nodeType":"36","messageId":"37","endLine":11,"endColumn":25},{"ruleId":"34","severity":1,"message":"42","line":12,"column":16,"nodeType":"36","messageId":"37","endLine":12,"endColumn":25},{"ruleId":"34","severity":1,"message":"43","line":16,"column":7,"nodeType":"36","messageId":"37","endLine":16,"endColumn":18},{"ruleId":"34","severity":1,"message":"44","line":16,"column":19,"nodeType":"36","messageId":"37","endLine":16,"endColumn":29},{"ruleId":"34","severity":1,"message":"45","line":44,"column":7,"nodeType":"36","messageId":"37","endLine":44,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":45,"column":3,"nodeType":"48","messageId":"49","endLine":45,"endColumn":7},{"ruleId":"34","severity":1,"message":"50","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":16},"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'setfield1' is assigned a value but never used.","'setfield2' is assigned a value but never used.","'setfield3' is assigned a value but never used.","'setfield4' is assigned a value but never used.","'setfield5' is assigned a value but never used.","'total_marks' is defined but never used.","'percentage' is defined but never used.","'value' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'ReactDOM' is defined but never used."]